name: Render and Deploy Docs

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:

  build:
    name: Render and deploy protocol and API docs
    timeout-minutes: 30
    runs-on: buildjet-16vcpu-ubuntu-2004
    steps:
      - name: Checkout the source code
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Load Rust caching
        uses: Swatinem/rust-cache@v1
      - name: Load get-version action to grab version component of deployment path
        uses: battila7/get-version-action@v2
        id: get_version
      - name: Install mdbook
        run: |
          cargo install mdbook mdbook-katex mdbook-mermaid

      - name: Install Golang toolchain
        uses: actions/setup-go@v3
        with:
          go-version: '^1.18.3'
      - name: Install protoc-gen-doc
        run: |
          go get -u github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc

      - name: Build proto docs
        run: |
          protoc --doc_out=./protodoc --doc_opt=html,index.html proto/proto/**/*.proto
      - name: Deploy proto docs to firebase
        uses: w9jds/firebase-action@v2.0.0
        with:
          args: deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: penumbra-protobufdocs
          PROJECT_PATH: protodocs

      - name: Build API docs
        run: |
          # Explicitly specify which crates should be included.
          # Guidelines:
          # - workspace crates are included
          # - git dependencies are included
          # - published crates are excluded
          # Doing this in one go is useful because the JSON file with search
          # indexes is overwritten on each cargo doc invocation.
          #
          # When updating, also check docs/rustdoc/README.md to regenerate index.html
          cargo doc --no-deps \
            -p tendermint \
            -p tower-abci \
            -p jmt \
            -p ark-ff \
            -p ark-serialize \
            -p ark-sponge \
            -p poseidon377 \
            -p poseidon-paramgen \
            -p decaf377 \
            -p decaf377-rdsa \
            -p decaf377-fmd \
            -p decaf377-ka \
            -p penumbra-proto \
            -p penumbra-chain \
            -p penumbra-component \
            -p penumbra-crypto \
            -p penumbra-custody \
            -p penumbra-storage \
            -p penumbra-tct \
            -p penumbra-transaction \
            -p penumbra-wallet \
            -p penumbra-view \
            -p pd \
            -p pcli
      - name: Move API docs to subdirectory
        run: |
          cd docs/rustdoc
          if [ -d "firebase-tmp" ]; then rm -rf firebase-tmp; fi
          mkdir firebase-tmp
          mv ../../target/doc firebase-tmp/${{ steps.get_version.outputs.version }}
          # Copy in the static index file
          cp index.html firebase-tmp/${{ steps.get_version.outputs.version }}
      - name: Deploy API docs to firebase
        uses: w9jds/firebase-action@v2.0.0
        with:
          args: deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: penumbra-doc
          PROJECT_PATH: docs/rustdoc

      - name: Build protocol spec
        run: |
          cd docs/protocol && mdbook build
      - name: Move protocol spec to subdirectory
        run: |
          cd docs/protocol
          if [ -d "firebase-tmp" ]; then rm -rf firebase-tmp; fi
          mkdir firebase-tmp
          mv book firebase-tmp/${{ steps.get_version.outputs.version }}
      - name: Deploy protocol spec to firebase
        uses: w9jds/firebase-action@v2.0.0
        with:
          args: deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: penumbra-protocol
          PROJECT_PATH: docs/protocol

      - name: Build software guide
        run: |
          cd docs/guide && mdbook build
      - name: Move software guide to subdirectory
        run: |
          cd docs/guide
          if [ -d "firebase-tmp" ]; then rm -rf firebase-tmp; fi
          mkdir firebase-tmp
          mv book firebase-tmp/${{ steps.get_version.outputs.version }}
      - name: Deploy software guide to firebase
        uses: w9jds/firebase-action@v2.0.0
        with:
          args: deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: penumbra-guide
          PROJECT_PATH: docs/guide
